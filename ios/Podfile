platform :ios, '15.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  gen = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  if File.exist?(gen)
    File.foreach(gen) do |line|
      m = line.match(/FLUTTER_ROOT=(.*)/)
      return m[1].strip if m
    end
  end
  return ENV['FLUTTER_ROOT'] if ENV['FLUTTER_ROOT'] && !ENV['FLUTTER_ROOT'].empty?
  which = `which flutter`.strip
  raise "Flutter not found in PATH" if which.nil? || which.empty?
  File.expand_path(File.join(File.dirname(File.dirname(which))))
end

require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'), __FILE__)

use_modular_headers!
use_frameworks! :linkage => :static

flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end

post_install do |installer|
  # выставим минимальную iOS для всех таргетов
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      # Не трогаем EXCLUDED_ARCHS — симулятор на Apple Silicon = arm64
    end
  end

  # универсальная совместимость с Flutter helper (старый/новый сигнатуры)
  begin
    flutter_additional_ios_build_settings(installer)
  rescue NoMethodError
    installer.pods_project.targets.each do |t|
      flutter_additional_ios_build_settings(t)
    end
  end
end
