# ios/Podfile
platform :ios, '15.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Находим FLUTTER_ROOT
def flutter_root
  gen = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  if File.exist?(gen)
    File.foreach(gen) do |line|
      m = line.match(/FLUTTER_ROOT=(.*)/)
      return m[1].strip if m
    end
  end
  return ENV['FLUTTER_ROOT'] if ENV['FLUTTER_ROOT'] && !ENV['FLUTTER_ROOT'].empty?

  which = `which flutter`.strip
  raise "Flutter not found in PATH" if which.nil? || which.empty?
  File.expand_path(File.join(File.dirname(File.dirname(which))))
end

# Подключаем podhelper из Flutter SDK
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'), __FILE__)

# Глобально включаем модульные заголовки (нужно для Swift-подов Firebase)
use_modular_headers!

# Включаем статические фреймворки — это ок для Firebase + Flutter
use_frameworks! :linkage => :static

flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))

  post_install do |installer|
    # Минимальная версия iOS для всех конфигураций
    installer.pods_project.targets.each do |t|
      t.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      end
    end

    # Стандартные дополнительные настройки Flutter
    flutter_additional_ios_build_settings(installer)
  end
end
